
  seqdiag {
    node_width = 90;
    edge_length = 100;

    "Client"
    "External Monitoring Tool"
    "Prometheus-Plugin"
    "Tacker-server"
    "Tacker-conductor"
    "VnfPmDriverV2"
    "Tacker DB"

    "Client" -> "Tacker-server"
      [label = "1. Create PM job"];
    "Tacker-server" -> "Tacker-conductor"
      [label = "Trigger synchronization task"];
    "Tacker-conductor" -> "VnfPmDriverV2"
      [label = "execute VnfPmDriverV2"];
    "VnfPmDriverV2" -> "VnfPmDriverV2"
      [label = "Get the callback_uri in the PM job"];
    "VnfPmDriverV2" -> "Client"
      [label = "Send a GET request to the callback_uri in the Client."];
    "VnfPmDriverV2" <-- "Client"
      [label = "Response 204 No Content"];
    "VnfPmDriverV2" -> "Tacker DB"
      [label = "Save PM job to DB"];
    "VnfPmDriverV2" <-- "Tacker DB"
    "VnfPmDriverV2" -> "Prometheus-Plugin"
      [label = "Set PM job to Prometheus-Plugin"];
    "Prometheus-Plugin" -> "Prometheus-Plugin"
      [label = "Convert to Prometheus format PM job"];
    "Prometheus-Plugin" -> "External Monitoring Tool"
      [label = "Set PM job"];
    "Prometheus-Plugin" <-- "External Monitoring Tool"
    "VnfPmDriverV2" <-- "Prometheus-Plugin"
    "Tacker-conductor" <-- "VnfPmDriverV2"
    "Tacker-server" <-- "Tacker-conductor"
    "Client" <-- "Tacker-server"
      [label = "Response 201 Created"];
    "External Monitoring Tool" -> "Prometheus-Plugin"
      [label = "2. Send event to the specified URI"];
    "Prometheus-Plugin" -> "Prometheus-Plugin"
      [label = "3. Check items of prometheus_plugin from cfg.CONF.tacker", note = "If prometheus_plugin is False, asynchronous task is over"];
    "Prometheus-Plugin" -> "Prometheus-Plugin"
      [label = "4. Determine whether the report is AutoHeal or AutoScale", note = "If it is heal, refer to the processing flow of AutoHeal"];
    "Prometheus-Plugin" -> "Tacker DB"
      [label = "5. Find the corresponding resource from the DB"];
    "Prometheus-Plugin" <-- "Tacker DB"
    "Prometheus-Plugin" -> "Prometheus-Plugin"
      [label = "6. Convert received event to report"];
    "Prometheus-Plugin" -> "VnfPmDriverV2"
      [label = "7. execute VnfPmDriverV2"];
    "VnfPmDriverV2" -> "Tacker DB"
      [label = "8. Save report to DB"];
    "VnfPmDriverV2" <-- "Tacker DB"
    "VnfPmDriverV2" -> "Tacker DB"
      [label = "9. Get job from DB"];
    "VnfPmDriverV2" <-- "Tacker DB"
    "VnfPmDriverV2" -> "VnfPmDriverV2"
      [label = "10. Determine whether the report matches the PM job.", note = "If it does not match, the processing ends"];
    "VnfPmDriverV2" -> "Client"
      [label = "11. Send a Notify Event request to the Client"];
    "VnfPmDriverV2" <-- "Client"
      [label = "Response 204 No Content"];
    "Prometheus-Plugin" <-- "VnfPmDriverV2"
    "Client" -> "Client"
      [label = "12. Get VNFC information from report", note = "If no report is returned, the processing is over"];
    "Client" -> "Tacker-server"
      [label = "13. Scale"];
    "Tacker-server" -> "Tacker-conductor"
      [label = "14. Trigger asynchronous task", note = "The same with the default scale operation"];
    "Client" <-- "Tacker-server"
      [label = "Response 202 Accepted"];
  }
