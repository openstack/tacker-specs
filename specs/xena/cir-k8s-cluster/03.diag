
  seqdiag {
    node_width = 80;
    edge_length = 100;

    "Client"
    "Tacker-server"
    "Tacker-conductor"
    "VnfLcmDriver"
    "OpenStackInfraDriver"
    "Heat"
    "MgmtDriver"
    "VnfInstance(Tacker DB)"
    "RemoteCommandExecutor"
    "SFTPClient"
    "NfvoPlugin"

    Client -> "Tacker-server"
      [label = "POST /vnf_instances/{vnfInstanceId}/instantiate"];
    Client <-- "Tacker-server"
      [label = "Response 202 Accepted"];
    "Tacker-server" -> "Tacker-conductor"
      [label = "trigger asynchronous task"];

   "Tacker-conductor" -> "VnfLcmDriver"
      [label = "execute VnfLcmDriver"];
    "VnfLcmDriver" -> "OpenStackInfraDriver"
      [label = "execute OpenStackInfraDriver"];
    "OpenStackInfraDriver" -> "Heat"
      [label = "create stack"];
    "OpenStackInfraDriver" <-- "Heat"
      [label = "return stack id"];
    "VnfLcmDriver" <-- "OpenStackInfraDriver"
      [label = "return instance_id"];

    "VnfLcmDriver" -> "MgmtDriver"
      [label = "instantiate_end"];
    "MgmtDriver" -> "VnfInstance(Tacker DB)"
      [label = "get stack id"];
    "MgmtDriver" <-- "VnfInstance(Tacker DB)"
      [label = ""];
    "MgmtDriver" -> "Heat"
      [label = "get SSH/SFTP IP addresses and Kubernetes addresses using stack id"];
    "MgmtDriver" <-- "Heat"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "install Kubernetes and create cluster on new Master/Worker VMs"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "get identification token from Kubernetes cluster"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "SFTPClient"
      [label = "transfer CA certificate files to all Master/Worker VMs if specified by request parameter"];
    "MgmtDriver" <-- "SFTPClient"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "configure connections to the Docker private registries on all Master/Worker VMs"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "NfvoPlugin"
      [label = "register Kubernetes VIM to tacker"];
    "MgmtDriver" <-- "NfvoPlugin"
      [label = ""]
    "MgmtDriver" -> "VnfInstance(Tacker DB)"
      [label = "append Kubernetes cluster VIM info to VimConnectionInfo"]
    "MgmtDriver" <-- "VnfInstance(Tacker DB)"
      [label = ""]
    "VnfLcmDriver" <-- "MgmtDriver"
      [label = ""];
    "Tacker-conductor" <-- "VnfLcmDriver"
      [label = ""];

  }
