
  seqdiag {
    node_width = 80;
    edge_length = 100;

    "Client"
    "Tacker-server"
    "Tacker-conductor"
    "VnfLcmDriver"
    "OpenStackInfraDriver"
    "Heat"
    "MgmtDriver"
    "VnfInstance(Tacker DB)"
    "RemoteCommandExecutor"
    "SFTPClient"

    Client -> "Tacker-server"
      [label = "POST /vnf_instances/{vnfInstanceId}/heal"];
    Client <-- "Tacker-server"
      [label = "Response 202 Accepted"];
    "Tacker-server" -> "Tacker-conductor"
      [label = "trigger asynchronous task"];

    "Tacker-conductor" -> "VnfLcmDriver"
      [label = "execute VnfLcmDriver"];
    "VnfLcmDriver" -> "MgmtDriver"
      [label = "heal_start"];
    "MgmtDriver" -> "VnfInstance(Tacker DB)"
      [label = "get the vim connection info"];
    "MgmtDriver" <-- "VnfInstance(Tacker DB)"
      [label = ""];
    "MgmtDriver" -> "MgmtDriver"
      [label = "get the vm info to be deleted by the request data"];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "(Worker only)evacuating the pod running on the failed VM to another worker node"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "remove the failed node from cluster"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "(Master only)remove the failed node from HA proxy"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "VnfLcmDriver" <-- "MgmtDriver"
      [label = ""];

    "VnfLcmDriver" -> "OpenStackInfraDriver"
      [label = "execute OpenStackInfraDriver"];
    "OpenStackInfraDriver" -> "Heat"
      [label = "resource mark unhealthy"];
    "OpenStackInfraDriver" <-- "Heat"
      [label = ""];
    "OpenStackInfraDriver" -> "Heat"
      [label = "update stack"];
    "OpenStackInfraDriver" <-- "Heat"
      [label = ""];
    "VnfLcmDriver" <-- "OpenStackInfraDriver"
      [label = ""];

    "VnfLcmDriver" -> "MgmtDriver"
      [label = "heal_end"];
    "MgmtDriver" -> "VnfInstance(Tacker DB)"
      [label = "get stack id"];
    "MgmtDriver" <-- "VnfInstance(Tacker DB)"
      [label = ""];
    "MgmtDriver" -> "Heat"
      [label = "get the new VM info created by Heal operation"];
    "MgmtDriver" <-- "Heat"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "install Kubernetes and join cluster on the new VM"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "(Master only)Changes HA proxy configuration"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "MgmtDriver" -> "VnfInstance(Tacker DB)"
      [label = "get private_registry_connection_info of Instantiate VNF request"];
    "MgmtDriver" <-- "VnfInstance(Tacker DB)"
      [label = ""];
    "MgmtDriver" -> "SFTPClient"
      [label = "transfer CA certificate files to the new VM if specified by Instantiate VNF request parameter"];
    "MgmtDriver" <-- "SFTPClient"
      [label = ""];
    "MgmtDriver" -> "RemoteCommandExecutor"
      [label = "configure connections to Docker private registries on the new VM"];
    "MgmtDriver" <-- "RemoteCommandExecutor"
      [label = ""];
    "VnfLcmDriver" <-- "MgmtDriver"
      [label = ""];
    "Tacker-conductor" <-- "VnfLcmDriver"
      [label = ""];

  }
